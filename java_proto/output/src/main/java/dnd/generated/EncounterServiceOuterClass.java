// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encounter_service.proto

package dnd.generated;

public final class EncounterServiceOuterClass {
  private EncounterServiceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MonsterRpcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MonsterRpc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float cr = 1;</code>
     * @return The cr.
     */
    float getCr();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code MonsterRpc}
   */
  public static final class MonsterRpc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MonsterRpc)
      MonsterRpcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MonsterRpc.newBuilder() to construct.
    private MonsterRpc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MonsterRpc() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MonsterRpc();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterRpc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterRpc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dnd.generated.EncounterServiceOuterClass.MonsterRpc.class, dnd.generated.EncounterServiceOuterClass.MonsterRpc.Builder.class);
    }

    public static final int CR_FIELD_NUMBER = 1;
    private float cr_ = 0F;
    /**
     * <code>float cr = 1;</code>
     * @return The cr.
     */
    @java.lang.Override
    public float getCr() {
      return cr_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(cr_) != 0) {
        output.writeFloat(1, cr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(cr_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, cr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dnd.generated.EncounterServiceOuterClass.MonsterRpc)) {
        return super.equals(obj);
      }
      dnd.generated.EncounterServiceOuterClass.MonsterRpc other = (dnd.generated.EncounterServiceOuterClass.MonsterRpc) obj;

      if (java.lang.Float.floatToIntBits(getCr())
          != java.lang.Float.floatToIntBits(
              other.getCr())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCr());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dnd.generated.EncounterServiceOuterClass.MonsterRpc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MonsterRpc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MonsterRpc)
        dnd.generated.EncounterServiceOuterClass.MonsterRpcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterRpc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterRpc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dnd.generated.EncounterServiceOuterClass.MonsterRpc.class, dnd.generated.EncounterServiceOuterClass.MonsterRpc.Builder.class);
      }

      // Construct using dnd.generated.EncounterServiceOuterClass.MonsterRpc.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cr_ = 0F;
        name_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterRpc_descriptor;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.MonsterRpc getDefaultInstanceForType() {
        return dnd.generated.EncounterServiceOuterClass.MonsterRpc.getDefaultInstance();
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.MonsterRpc build() {
        dnd.generated.EncounterServiceOuterClass.MonsterRpc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.MonsterRpc buildPartial() {
        dnd.generated.EncounterServiceOuterClass.MonsterRpc result = new dnd.generated.EncounterServiceOuterClass.MonsterRpc(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(dnd.generated.EncounterServiceOuterClass.MonsterRpc result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cr_ = cr_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dnd.generated.EncounterServiceOuterClass.MonsterRpc) {
          return mergeFrom((dnd.generated.EncounterServiceOuterClass.MonsterRpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dnd.generated.EncounterServiceOuterClass.MonsterRpc other) {
        if (other == dnd.generated.EncounterServiceOuterClass.MonsterRpc.getDefaultInstance()) return this;
        if (other.getCr() != 0F) {
          setCr(other.getCr());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                cr_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 18: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float cr_ ;
      /**
       * <code>float cr = 1;</code>
       * @return The cr.
       */
      @java.lang.Override
      public float getCr() {
        return cr_;
      }
      /**
       * <code>float cr = 1;</code>
       * @param value The cr to set.
       * @return This builder for chaining.
       */
      public Builder setCr(float value) {

        cr_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float cr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cr_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MonsterRpc)
    }

    // @@protoc_insertion_point(class_scope:MonsterRpc)
    private static final dnd.generated.EncounterServiceOuterClass.MonsterRpc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dnd.generated.EncounterServiceOuterClass.MonsterRpc();
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterRpc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MonsterRpc>
        PARSER = new com.google.protobuf.AbstractParser<MonsterRpc>() {
      @java.lang.Override
      public MonsterRpc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MonsterRpc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MonsterRpc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.MonsterRpc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GenerateEncounterRpcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GenerateEncounterRpc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 amountOfEncounters = 1;</code>
     * @return The amountOfEncounters.
     */
    int getAmountOfEncounters();

    /**
     * <code>int32 xp = 2;</code>
     * @return The xp.
     */
    int getXp();

    /**
     * <code>int32 xpTolerance = 3;</code>
     * @return The xpTolerance.
     */
    int getXpTolerance();

    /**
     * <code>int32 maxAmountOfMonsters = 4;</code>
     * @return The maxAmountOfMonsters.
     */
    int getMaxAmountOfMonsters();

    /**
     * <code>bool differentKindOfMonsters = 5;</code>
     * @return The differentKindOfMonsters.
     */
    boolean getDifferentKindOfMonsters();

    /**
     * <code>bool onlyOneKindOfMonsterPerCr = 6;</code>
     * @return The onlyOneKindOfMonsterPerCr.
     */
    boolean getOnlyOneKindOfMonsterPerCr();

    /**
     * <code>int64 monsterGroupId = 7;</code>
     * @return The monsterGroupId.
     */
    long getMonsterGroupId();
  }
  /**
   * Protobuf type {@code GenerateEncounterRpc}
   */
  public static final class GenerateEncounterRpc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GenerateEncounterRpc)
      GenerateEncounterRpcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GenerateEncounterRpc.newBuilder() to construct.
    private GenerateEncounterRpc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GenerateEncounterRpc() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GenerateEncounterRpc();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_GenerateEncounterRpc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_GenerateEncounterRpc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc.class, dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc.Builder.class);
    }

    public static final int AMOUNTOFENCOUNTERS_FIELD_NUMBER = 1;
    private int amountOfEncounters_ = 0;
    /**
     * <code>int32 amountOfEncounters = 1;</code>
     * @return The amountOfEncounters.
     */
    @java.lang.Override
    public int getAmountOfEncounters() {
      return amountOfEncounters_;
    }

    public static final int XP_FIELD_NUMBER = 2;
    private int xp_ = 0;
    /**
     * <code>int32 xp = 2;</code>
     * @return The xp.
     */
    @java.lang.Override
    public int getXp() {
      return xp_;
    }

    public static final int XPTOLERANCE_FIELD_NUMBER = 3;
    private int xpTolerance_ = 0;
    /**
     * <code>int32 xpTolerance = 3;</code>
     * @return The xpTolerance.
     */
    @java.lang.Override
    public int getXpTolerance() {
      return xpTolerance_;
    }

    public static final int MAXAMOUNTOFMONSTERS_FIELD_NUMBER = 4;
    private int maxAmountOfMonsters_ = 0;
    /**
     * <code>int32 maxAmountOfMonsters = 4;</code>
     * @return The maxAmountOfMonsters.
     */
    @java.lang.Override
    public int getMaxAmountOfMonsters() {
      return maxAmountOfMonsters_;
    }

    public static final int DIFFERENTKINDOFMONSTERS_FIELD_NUMBER = 5;
    private boolean differentKindOfMonsters_ = false;
    /**
     * <code>bool differentKindOfMonsters = 5;</code>
     * @return The differentKindOfMonsters.
     */
    @java.lang.Override
    public boolean getDifferentKindOfMonsters() {
      return differentKindOfMonsters_;
    }

    public static final int ONLYONEKINDOFMONSTERPERCR_FIELD_NUMBER = 6;
    private boolean onlyOneKindOfMonsterPerCr_ = false;
    /**
     * <code>bool onlyOneKindOfMonsterPerCr = 6;</code>
     * @return The onlyOneKindOfMonsterPerCr.
     */
    @java.lang.Override
    public boolean getOnlyOneKindOfMonsterPerCr() {
      return onlyOneKindOfMonsterPerCr_;
    }

    public static final int MONSTERGROUPID_FIELD_NUMBER = 7;
    private long monsterGroupId_ = 0L;
    /**
     * <code>int64 monsterGroupId = 7;</code>
     * @return The monsterGroupId.
     */
    @java.lang.Override
    public long getMonsterGroupId() {
      return monsterGroupId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (amountOfEncounters_ != 0) {
        output.writeInt32(1, amountOfEncounters_);
      }
      if (xp_ != 0) {
        output.writeInt32(2, xp_);
      }
      if (xpTolerance_ != 0) {
        output.writeInt32(3, xpTolerance_);
      }
      if (maxAmountOfMonsters_ != 0) {
        output.writeInt32(4, maxAmountOfMonsters_);
      }
      if (differentKindOfMonsters_ != false) {
        output.writeBool(5, differentKindOfMonsters_);
      }
      if (onlyOneKindOfMonsterPerCr_ != false) {
        output.writeBool(6, onlyOneKindOfMonsterPerCr_);
      }
      if (monsterGroupId_ != 0L) {
        output.writeInt64(7, monsterGroupId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (amountOfEncounters_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, amountOfEncounters_);
      }
      if (xp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, xp_);
      }
      if (xpTolerance_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, xpTolerance_);
      }
      if (maxAmountOfMonsters_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxAmountOfMonsters_);
      }
      if (differentKindOfMonsters_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, differentKindOfMonsters_);
      }
      if (onlyOneKindOfMonsterPerCr_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, onlyOneKindOfMonsterPerCr_);
      }
      if (monsterGroupId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, monsterGroupId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc)) {
        return super.equals(obj);
      }
      dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc other = (dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc) obj;

      if (getAmountOfEncounters()
          != other.getAmountOfEncounters()) return false;
      if (getXp()
          != other.getXp()) return false;
      if (getXpTolerance()
          != other.getXpTolerance()) return false;
      if (getMaxAmountOfMonsters()
          != other.getMaxAmountOfMonsters()) return false;
      if (getDifferentKindOfMonsters()
          != other.getDifferentKindOfMonsters()) return false;
      if (getOnlyOneKindOfMonsterPerCr()
          != other.getOnlyOneKindOfMonsterPerCr()) return false;
      if (getMonsterGroupId()
          != other.getMonsterGroupId()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNTOFENCOUNTERS_FIELD_NUMBER;
      hash = (53 * hash) + getAmountOfEncounters();
      hash = (37 * hash) + XP_FIELD_NUMBER;
      hash = (53 * hash) + getXp();
      hash = (37 * hash) + XPTOLERANCE_FIELD_NUMBER;
      hash = (53 * hash) + getXpTolerance();
      hash = (37 * hash) + MAXAMOUNTOFMONSTERS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxAmountOfMonsters();
      hash = (37 * hash) + DIFFERENTKINDOFMONSTERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDifferentKindOfMonsters());
      hash = (37 * hash) + ONLYONEKINDOFMONSTERPERCR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOnlyOneKindOfMonsterPerCr());
      hash = (37 * hash) + MONSTERGROUPID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMonsterGroupId());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GenerateEncounterRpc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GenerateEncounterRpc)
        dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_GenerateEncounterRpc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_GenerateEncounterRpc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc.class, dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc.Builder.class);
      }

      // Construct using dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        amountOfEncounters_ = 0;
        xp_ = 0;
        xpTolerance_ = 0;
        maxAmountOfMonsters_ = 0;
        differentKindOfMonsters_ = false;
        onlyOneKindOfMonsterPerCr_ = false;
        monsterGroupId_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_GenerateEncounterRpc_descriptor;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc getDefaultInstanceForType() {
        return dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc.getDefaultInstance();
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc build() {
        dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc buildPartial() {
        dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc result = new dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.amountOfEncounters_ = amountOfEncounters_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.xp_ = xp_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.xpTolerance_ = xpTolerance_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.maxAmountOfMonsters_ = maxAmountOfMonsters_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.differentKindOfMonsters_ = differentKindOfMonsters_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.onlyOneKindOfMonsterPerCr_ = onlyOneKindOfMonsterPerCr_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.monsterGroupId_ = monsterGroupId_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc) {
          return mergeFrom((dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc other) {
        if (other == dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc.getDefaultInstance()) return this;
        if (other.getAmountOfEncounters() != 0) {
          setAmountOfEncounters(other.getAmountOfEncounters());
        }
        if (other.getXp() != 0) {
          setXp(other.getXp());
        }
        if (other.getXpTolerance() != 0) {
          setXpTolerance(other.getXpTolerance());
        }
        if (other.getMaxAmountOfMonsters() != 0) {
          setMaxAmountOfMonsters(other.getMaxAmountOfMonsters());
        }
        if (other.getDifferentKindOfMonsters() != false) {
          setDifferentKindOfMonsters(other.getDifferentKindOfMonsters());
        }
        if (other.getOnlyOneKindOfMonsterPerCr() != false) {
          setOnlyOneKindOfMonsterPerCr(other.getOnlyOneKindOfMonsterPerCr());
        }
        if (other.getMonsterGroupId() != 0L) {
          setMonsterGroupId(other.getMonsterGroupId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                amountOfEncounters_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                xp_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                xpTolerance_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                maxAmountOfMonsters_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                differentKindOfMonsters_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                onlyOneKindOfMonsterPerCr_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                monsterGroupId_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int amountOfEncounters_ ;
      /**
       * <code>int32 amountOfEncounters = 1;</code>
       * @return The amountOfEncounters.
       */
      @java.lang.Override
      public int getAmountOfEncounters() {
        return amountOfEncounters_;
      }
      /**
       * <code>int32 amountOfEncounters = 1;</code>
       * @param value The amountOfEncounters to set.
       * @return This builder for chaining.
       */
      public Builder setAmountOfEncounters(int value) {

        amountOfEncounters_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 amountOfEncounters = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmountOfEncounters() {
        bitField0_ = (bitField0_ & ~0x00000001);
        amountOfEncounters_ = 0;
        onChanged();
        return this;
      }

      private int xp_ ;
      /**
       * <code>int32 xp = 2;</code>
       * @return The xp.
       */
      @java.lang.Override
      public int getXp() {
        return xp_;
      }
      /**
       * <code>int32 xp = 2;</code>
       * @param value The xp to set.
       * @return This builder for chaining.
       */
      public Builder setXp(int value) {

        xp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 xp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearXp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        xp_ = 0;
        onChanged();
        return this;
      }

      private int xpTolerance_ ;
      /**
       * <code>int32 xpTolerance = 3;</code>
       * @return The xpTolerance.
       */
      @java.lang.Override
      public int getXpTolerance() {
        return xpTolerance_;
      }
      /**
       * <code>int32 xpTolerance = 3;</code>
       * @param value The xpTolerance to set.
       * @return This builder for chaining.
       */
      public Builder setXpTolerance(int value) {

        xpTolerance_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 xpTolerance = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearXpTolerance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        xpTolerance_ = 0;
        onChanged();
        return this;
      }

      private int maxAmountOfMonsters_ ;
      /**
       * <code>int32 maxAmountOfMonsters = 4;</code>
       * @return The maxAmountOfMonsters.
       */
      @java.lang.Override
      public int getMaxAmountOfMonsters() {
        return maxAmountOfMonsters_;
      }
      /**
       * <code>int32 maxAmountOfMonsters = 4;</code>
       * @param value The maxAmountOfMonsters to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAmountOfMonsters(int value) {

        maxAmountOfMonsters_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxAmountOfMonsters = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAmountOfMonsters() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxAmountOfMonsters_ = 0;
        onChanged();
        return this;
      }

      private boolean differentKindOfMonsters_ ;
      /**
       * <code>bool differentKindOfMonsters = 5;</code>
       * @return The differentKindOfMonsters.
       */
      @java.lang.Override
      public boolean getDifferentKindOfMonsters() {
        return differentKindOfMonsters_;
      }
      /**
       * <code>bool differentKindOfMonsters = 5;</code>
       * @param value The differentKindOfMonsters to set.
       * @return This builder for chaining.
       */
      public Builder setDifferentKindOfMonsters(boolean value) {

        differentKindOfMonsters_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>bool differentKindOfMonsters = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDifferentKindOfMonsters() {
        bitField0_ = (bitField0_ & ~0x00000010);
        differentKindOfMonsters_ = false;
        onChanged();
        return this;
      }

      private boolean onlyOneKindOfMonsterPerCr_ ;
      /**
       * <code>bool onlyOneKindOfMonsterPerCr = 6;</code>
       * @return The onlyOneKindOfMonsterPerCr.
       */
      @java.lang.Override
      public boolean getOnlyOneKindOfMonsterPerCr() {
        return onlyOneKindOfMonsterPerCr_;
      }
      /**
       * <code>bool onlyOneKindOfMonsterPerCr = 6;</code>
       * @param value The onlyOneKindOfMonsterPerCr to set.
       * @return This builder for chaining.
       */
      public Builder setOnlyOneKindOfMonsterPerCr(boolean value) {

        onlyOneKindOfMonsterPerCr_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>bool onlyOneKindOfMonsterPerCr = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnlyOneKindOfMonsterPerCr() {
        bitField0_ = (bitField0_ & ~0x00000020);
        onlyOneKindOfMonsterPerCr_ = false;
        onChanged();
        return this;
      }

      private long monsterGroupId_ ;
      /**
       * <code>int64 monsterGroupId = 7;</code>
       * @return The monsterGroupId.
       */
      @java.lang.Override
      public long getMonsterGroupId() {
        return monsterGroupId_;
      }
      /**
       * <code>int64 monsterGroupId = 7;</code>
       * @param value The monsterGroupId to set.
       * @return This builder for chaining.
       */
      public Builder setMonsterGroupId(long value) {

        monsterGroupId_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int64 monsterGroupId = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMonsterGroupId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        monsterGroupId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GenerateEncounterRpc)
    }

    // @@protoc_insertion_point(class_scope:GenerateEncounterRpc)
    private static final dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc();
    }

    public static dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenerateEncounterRpc>
        PARSER = new com.google.protobuf.AbstractParser<GenerateEncounterRpc>() {
      @java.lang.Override
      public GenerateEncounterRpc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GenerateEncounterRpc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenerateEncounterRpc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.GenerateEncounterRpc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MonsterAmountRpcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MonsterAmountRpc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 amount = 1;</code>
     * @return The amount.
     */
    int getAmount();

    /**
     * <code>.MonsterRpc monster = 2;</code>
     * @return Whether the monster field is set.
     */
    boolean hasMonster();
    /**
     * <code>.MonsterRpc monster = 2;</code>
     * @return The monster.
     */
    dnd.generated.EncounterServiceOuterClass.MonsterRpc getMonster();
    /**
     * <code>.MonsterRpc monster = 2;</code>
     */
    dnd.generated.EncounterServiceOuterClass.MonsterRpcOrBuilder getMonsterOrBuilder();
  }
  /**
   * Protobuf type {@code MonsterAmountRpc}
   */
  public static final class MonsterAmountRpc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MonsterAmountRpc)
      MonsterAmountRpcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MonsterAmountRpc.newBuilder() to construct.
    private MonsterAmountRpc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MonsterAmountRpc() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MonsterAmountRpc();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterAmountRpc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterAmountRpc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.class, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder.class);
    }

    private int bitField0_;
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private int amount_ = 0;
    /**
     * <code>int32 amount = 1;</code>
     * @return The amount.
     */
    @java.lang.Override
    public int getAmount() {
      return amount_;
    }

    public static final int MONSTER_FIELD_NUMBER = 2;
    private dnd.generated.EncounterServiceOuterClass.MonsterRpc monster_;
    /**
     * <code>.MonsterRpc monster = 2;</code>
     * @return Whether the monster field is set.
     */
    @java.lang.Override
    public boolean hasMonster() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.MonsterRpc monster = 2;</code>
     * @return The monster.
     */
    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.MonsterRpc getMonster() {
      return monster_ == null ? dnd.generated.EncounterServiceOuterClass.MonsterRpc.getDefaultInstance() : monster_;
    }
    /**
     * <code>.MonsterRpc monster = 2;</code>
     */
    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.MonsterRpcOrBuilder getMonsterOrBuilder() {
      return monster_ == null ? dnd.generated.EncounterServiceOuterClass.MonsterRpc.getDefaultInstance() : monster_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (amount_ != 0) {
        output.writeInt32(1, amount_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getMonster());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (amount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, amount_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMonster());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc)) {
        return super.equals(obj);
      }
      dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc other = (dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc) obj;

      if (getAmount()
          != other.getAmount()) return false;
      if (hasMonster() != other.hasMonster()) return false;
      if (hasMonster()) {
        if (!getMonster()
            .equals(other.getMonster())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAmount();
      if (hasMonster()) {
        hash = (37 * hash) + MONSTER_FIELD_NUMBER;
        hash = (53 * hash) + getMonster().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MonsterAmountRpc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MonsterAmountRpc)
        dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterAmountRpc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterAmountRpc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.class, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder.class);
      }

      // Construct using dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMonsterFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        amount_ = 0;
        monster_ = null;
        if (monsterBuilder_ != null) {
          monsterBuilder_.dispose();
          monsterBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_MonsterAmountRpc_descriptor;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc getDefaultInstanceForType() {
        return dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.getDefaultInstance();
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc build() {
        dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc buildPartial() {
        dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc result = new dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.amount_ = amount_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.monster_ = monsterBuilder_ == null
              ? monster_
              : monsterBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc) {
          return mergeFrom((dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc other) {
        if (other == dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.getDefaultInstance()) return this;
        if (other.getAmount() != 0) {
          setAmount(other.getAmount());
        }
        if (other.hasMonster()) {
          mergeMonster(other.getMonster());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                amount_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getMonsterFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int amount_ ;
      /**
       * <code>int32 amount = 1;</code>
       * @return The amount.
       */
      @java.lang.Override
      public int getAmount() {
        return amount_;
      }
      /**
       * <code>int32 amount = 1;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(int value) {

        amount_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 amount = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        amount_ = 0;
        onChanged();
        return this;
      }

      private dnd.generated.EncounterServiceOuterClass.MonsterRpc monster_;
      private com.google.protobuf.SingleFieldBuilderV3<
          dnd.generated.EncounterServiceOuterClass.MonsterRpc, dnd.generated.EncounterServiceOuterClass.MonsterRpc.Builder, dnd.generated.EncounterServiceOuterClass.MonsterRpcOrBuilder> monsterBuilder_;
      /**
       * <code>.MonsterRpc monster = 2;</code>
       * @return Whether the monster field is set.
       */
      public boolean hasMonster() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       * @return The monster.
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterRpc getMonster() {
        if (monsterBuilder_ == null) {
          return monster_ == null ? dnd.generated.EncounterServiceOuterClass.MonsterRpc.getDefaultInstance() : monster_;
        } else {
          return monsterBuilder_.getMessage();
        }
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       */
      public Builder setMonster(dnd.generated.EncounterServiceOuterClass.MonsterRpc value) {
        if (monsterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          monster_ = value;
        } else {
          monsterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       */
      public Builder setMonster(
          dnd.generated.EncounterServiceOuterClass.MonsterRpc.Builder builderForValue) {
        if (monsterBuilder_ == null) {
          monster_ = builderForValue.build();
        } else {
          monsterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       */
      public Builder mergeMonster(dnd.generated.EncounterServiceOuterClass.MonsterRpc value) {
        if (monsterBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            monster_ != null &&
            monster_ != dnd.generated.EncounterServiceOuterClass.MonsterRpc.getDefaultInstance()) {
            getMonsterBuilder().mergeFrom(value);
          } else {
            monster_ = value;
          }
        } else {
          monsterBuilder_.mergeFrom(value);
        }
        if (monster_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       */
      public Builder clearMonster() {
        bitField0_ = (bitField0_ & ~0x00000002);
        monster_ = null;
        if (monsterBuilder_ != null) {
          monsterBuilder_.dispose();
          monsterBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterRpc.Builder getMonsterBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMonsterFieldBuilder().getBuilder();
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterRpcOrBuilder getMonsterOrBuilder() {
        if (monsterBuilder_ != null) {
          return monsterBuilder_.getMessageOrBuilder();
        } else {
          return monster_ == null ?
              dnd.generated.EncounterServiceOuterClass.MonsterRpc.getDefaultInstance() : monster_;
        }
      }
      /**
       * <code>.MonsterRpc monster = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          dnd.generated.EncounterServiceOuterClass.MonsterRpc, dnd.generated.EncounterServiceOuterClass.MonsterRpc.Builder, dnd.generated.EncounterServiceOuterClass.MonsterRpcOrBuilder> 
          getMonsterFieldBuilder() {
        if (monsterBuilder_ == null) {
          monsterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              dnd.generated.EncounterServiceOuterClass.MonsterRpc, dnd.generated.EncounterServiceOuterClass.MonsterRpc.Builder, dnd.generated.EncounterServiceOuterClass.MonsterRpcOrBuilder>(
                  getMonster(),
                  getParentForChildren(),
                  isClean());
          monster_ = null;
        }
        return monsterBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MonsterAmountRpc)
    }

    // @@protoc_insertion_point(class_scope:MonsterAmountRpc)
    private static final dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc();
    }

    public static dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MonsterAmountRpc>
        PARSER = new com.google.protobuf.AbstractParser<MonsterAmountRpc>() {
      @java.lang.Override
      public MonsterAmountRpc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MonsterAmountRpc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MonsterAmountRpc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncounterRpcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EncounterRpc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    java.util.List<dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc> 
        getMonstersList();
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc getMonsters(int index);
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    int getMonstersCount();
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    java.util.List<? extends dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder> 
        getMonstersOrBuilderList();
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder getMonstersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code EncounterRpc}
   */
  public static final class EncounterRpc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EncounterRpc)
      EncounterRpcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncounterRpc.newBuilder() to construct.
    private EncounterRpc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncounterRpc() {
      monsters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncounterRpc();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterRpc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterRpc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dnd.generated.EncounterServiceOuterClass.EncounterRpc.class, dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder.class);
    }

    public static final int MONSTERS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc> monsters_;
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc> getMonstersList() {
      return monsters_;
    }
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder> 
        getMonstersOrBuilderList() {
      return monsters_;
    }
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    @java.lang.Override
    public int getMonstersCount() {
      return monsters_.size();
    }
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc getMonsters(int index) {
      return monsters_.get(index);
    }
    /**
     * <code>repeated .MonsterAmountRpc monsters = 1;</code>
     */
    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder getMonstersOrBuilder(
        int index) {
      return monsters_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < monsters_.size(); i++) {
        output.writeMessage(1, monsters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < monsters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, monsters_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dnd.generated.EncounterServiceOuterClass.EncounterRpc)) {
        return super.equals(obj);
      }
      dnd.generated.EncounterServiceOuterClass.EncounterRpc other = (dnd.generated.EncounterServiceOuterClass.EncounterRpc) obj;

      if (!getMonstersList()
          .equals(other.getMonstersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMonstersCount() > 0) {
        hash = (37 * hash) + MONSTERS_FIELD_NUMBER;
        hash = (53 * hash) + getMonstersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dnd.generated.EncounterServiceOuterClass.EncounterRpc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EncounterRpc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EncounterRpc)
        dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterRpc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterRpc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dnd.generated.EncounterServiceOuterClass.EncounterRpc.class, dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder.class);
      }

      // Construct using dnd.generated.EncounterServiceOuterClass.EncounterRpc.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (monstersBuilder_ == null) {
          monsters_ = java.util.Collections.emptyList();
        } else {
          monsters_ = null;
          monstersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterRpc_descriptor;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.EncounterRpc getDefaultInstanceForType() {
        return dnd.generated.EncounterServiceOuterClass.EncounterRpc.getDefaultInstance();
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.EncounterRpc build() {
        dnd.generated.EncounterServiceOuterClass.EncounterRpc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.EncounterRpc buildPartial() {
        dnd.generated.EncounterServiceOuterClass.EncounterRpc result = new dnd.generated.EncounterServiceOuterClass.EncounterRpc(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(dnd.generated.EncounterServiceOuterClass.EncounterRpc result) {
        if (monstersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            monsters_ = java.util.Collections.unmodifiableList(monsters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.monsters_ = monsters_;
        } else {
          result.monsters_ = monstersBuilder_.build();
        }
      }

      private void buildPartial0(dnd.generated.EncounterServiceOuterClass.EncounterRpc result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dnd.generated.EncounterServiceOuterClass.EncounterRpc) {
          return mergeFrom((dnd.generated.EncounterServiceOuterClass.EncounterRpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dnd.generated.EncounterServiceOuterClass.EncounterRpc other) {
        if (other == dnd.generated.EncounterServiceOuterClass.EncounterRpc.getDefaultInstance()) return this;
        if (monstersBuilder_ == null) {
          if (!other.monsters_.isEmpty()) {
            if (monsters_.isEmpty()) {
              monsters_ = other.monsters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMonstersIsMutable();
              monsters_.addAll(other.monsters_);
            }
            onChanged();
          }
        } else {
          if (!other.monsters_.isEmpty()) {
            if (monstersBuilder_.isEmpty()) {
              monstersBuilder_.dispose();
              monstersBuilder_ = null;
              monsters_ = other.monsters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              monstersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMonstersFieldBuilder() : null;
            } else {
              monstersBuilder_.addAllMessages(other.monsters_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc m =
                    input.readMessage(
                        dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.parser(),
                        extensionRegistry);
                if (monstersBuilder_ == null) {
                  ensureMonstersIsMutable();
                  monsters_.add(m);
                } else {
                  monstersBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc> monsters_ =
        java.util.Collections.emptyList();
      private void ensureMonstersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          monsters_ = new java.util.ArrayList<dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc>(monsters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder> monstersBuilder_;

      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public java.util.List<dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc> getMonstersList() {
        if (monstersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(monsters_);
        } else {
          return monstersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public int getMonstersCount() {
        if (monstersBuilder_ == null) {
          return monsters_.size();
        } else {
          return monstersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc getMonsters(int index) {
        if (monstersBuilder_ == null) {
          return monsters_.get(index);
        } else {
          return monstersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder setMonsters(
          int index, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc value) {
        if (monstersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMonstersIsMutable();
          monsters_.set(index, value);
          onChanged();
        } else {
          monstersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder setMonsters(
          int index, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder builderForValue) {
        if (monstersBuilder_ == null) {
          ensureMonstersIsMutable();
          monsters_.set(index, builderForValue.build());
          onChanged();
        } else {
          monstersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder addMonsters(dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc value) {
        if (monstersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMonstersIsMutable();
          monsters_.add(value);
          onChanged();
        } else {
          monstersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder addMonsters(
          int index, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc value) {
        if (monstersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMonstersIsMutable();
          monsters_.add(index, value);
          onChanged();
        } else {
          monstersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder addMonsters(
          dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder builderForValue) {
        if (monstersBuilder_ == null) {
          ensureMonstersIsMutable();
          monsters_.add(builderForValue.build());
          onChanged();
        } else {
          monstersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder addMonsters(
          int index, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder builderForValue) {
        if (monstersBuilder_ == null) {
          ensureMonstersIsMutable();
          monsters_.add(index, builderForValue.build());
          onChanged();
        } else {
          monstersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder addAllMonsters(
          java.lang.Iterable<? extends dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc> values) {
        if (monstersBuilder_ == null) {
          ensureMonstersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, monsters_);
          onChanged();
        } else {
          monstersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder clearMonsters() {
        if (monstersBuilder_ == null) {
          monsters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          monstersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public Builder removeMonsters(int index) {
        if (monstersBuilder_ == null) {
          ensureMonstersIsMutable();
          monsters_.remove(index);
          onChanged();
        } else {
          monstersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder getMonstersBuilder(
          int index) {
        return getMonstersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder getMonstersOrBuilder(
          int index) {
        if (monstersBuilder_ == null) {
          return monsters_.get(index);  } else {
          return monstersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public java.util.List<? extends dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder> 
           getMonstersOrBuilderList() {
        if (monstersBuilder_ != null) {
          return monstersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(monsters_);
        }
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder addMonstersBuilder() {
        return getMonstersFieldBuilder().addBuilder(
            dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.getDefaultInstance());
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder addMonstersBuilder(
          int index) {
        return getMonstersFieldBuilder().addBuilder(
            index, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.getDefaultInstance());
      }
      /**
       * <code>repeated .MonsterAmountRpc monsters = 1;</code>
       */
      public java.util.List<dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder> 
           getMonstersBuilderList() {
        return getMonstersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder> 
          getMonstersFieldBuilder() {
        if (monstersBuilder_ == null) {
          monstersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpc.Builder, dnd.generated.EncounterServiceOuterClass.MonsterAmountRpcOrBuilder>(
                  monsters_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          monsters_ = null;
        }
        return monstersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EncounterRpc)
    }

    // @@protoc_insertion_point(class_scope:EncounterRpc)
    private static final dnd.generated.EncounterServiceOuterClass.EncounterRpc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dnd.generated.EncounterServiceOuterClass.EncounterRpc();
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterRpc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncounterRpc>
        PARSER = new com.google.protobuf.AbstractParser<EncounterRpc>() {
      @java.lang.Override
      public EncounterRpc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EncounterRpc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncounterRpc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.EncounterRpc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncounterListRpcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EncounterListRpc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    java.util.List<dnd.generated.EncounterServiceOuterClass.EncounterRpc> 
        getEncountersList();
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    dnd.generated.EncounterServiceOuterClass.EncounterRpc getEncounters(int index);
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    int getEncountersCount();
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    java.util.List<? extends dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder> 
        getEncountersOrBuilderList();
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder getEncountersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code EncounterListRpc}
   */
  public static final class EncounterListRpc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EncounterListRpc)
      EncounterListRpcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncounterListRpc.newBuilder() to construct.
    private EncounterListRpc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncounterListRpc() {
      encounters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncounterListRpc();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterListRpc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterListRpc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dnd.generated.EncounterServiceOuterClass.EncounterListRpc.class, dnd.generated.EncounterServiceOuterClass.EncounterListRpc.Builder.class);
    }

    public static final int ENCOUNTERS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<dnd.generated.EncounterServiceOuterClass.EncounterRpc> encounters_;
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dnd.generated.EncounterServiceOuterClass.EncounterRpc> getEncountersList() {
      return encounters_;
    }
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder> 
        getEncountersOrBuilderList() {
      return encounters_;
    }
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    @java.lang.Override
    public int getEncountersCount() {
      return encounters_.size();
    }
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.EncounterRpc getEncounters(int index) {
      return encounters_.get(index);
    }
    /**
     * <code>repeated .EncounterRpc encounters = 1;</code>
     */
    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder getEncountersOrBuilder(
        int index) {
      return encounters_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < encounters_.size(); i++) {
        output.writeMessage(1, encounters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < encounters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, encounters_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dnd.generated.EncounterServiceOuterClass.EncounterListRpc)) {
        return super.equals(obj);
      }
      dnd.generated.EncounterServiceOuterClass.EncounterListRpc other = (dnd.generated.EncounterServiceOuterClass.EncounterListRpc) obj;

      if (!getEncountersList()
          .equals(other.getEncountersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEncountersCount() > 0) {
        hash = (37 * hash) + ENCOUNTERS_FIELD_NUMBER;
        hash = (53 * hash) + getEncountersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dnd.generated.EncounterServiceOuterClass.EncounterListRpc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EncounterListRpc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EncounterListRpc)
        dnd.generated.EncounterServiceOuterClass.EncounterListRpcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterListRpc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterListRpc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dnd.generated.EncounterServiceOuterClass.EncounterListRpc.class, dnd.generated.EncounterServiceOuterClass.EncounterListRpc.Builder.class);
      }

      // Construct using dnd.generated.EncounterServiceOuterClass.EncounterListRpc.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (encountersBuilder_ == null) {
          encounters_ = java.util.Collections.emptyList();
        } else {
          encounters_ = null;
          encountersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dnd.generated.EncounterServiceOuterClass.internal_static_EncounterListRpc_descriptor;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.EncounterListRpc getDefaultInstanceForType() {
        return dnd.generated.EncounterServiceOuterClass.EncounterListRpc.getDefaultInstance();
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.EncounterListRpc build() {
        dnd.generated.EncounterServiceOuterClass.EncounterListRpc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dnd.generated.EncounterServiceOuterClass.EncounterListRpc buildPartial() {
        dnd.generated.EncounterServiceOuterClass.EncounterListRpc result = new dnd.generated.EncounterServiceOuterClass.EncounterListRpc(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(dnd.generated.EncounterServiceOuterClass.EncounterListRpc result) {
        if (encountersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            encounters_ = java.util.Collections.unmodifiableList(encounters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.encounters_ = encounters_;
        } else {
          result.encounters_ = encountersBuilder_.build();
        }
      }

      private void buildPartial0(dnd.generated.EncounterServiceOuterClass.EncounterListRpc result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dnd.generated.EncounterServiceOuterClass.EncounterListRpc) {
          return mergeFrom((dnd.generated.EncounterServiceOuterClass.EncounterListRpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dnd.generated.EncounterServiceOuterClass.EncounterListRpc other) {
        if (other == dnd.generated.EncounterServiceOuterClass.EncounterListRpc.getDefaultInstance()) return this;
        if (encountersBuilder_ == null) {
          if (!other.encounters_.isEmpty()) {
            if (encounters_.isEmpty()) {
              encounters_ = other.encounters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEncountersIsMutable();
              encounters_.addAll(other.encounters_);
            }
            onChanged();
          }
        } else {
          if (!other.encounters_.isEmpty()) {
            if (encountersBuilder_.isEmpty()) {
              encountersBuilder_.dispose();
              encountersBuilder_ = null;
              encounters_ = other.encounters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              encountersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEncountersFieldBuilder() : null;
            } else {
              encountersBuilder_.addAllMessages(other.encounters_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                dnd.generated.EncounterServiceOuterClass.EncounterRpc m =
                    input.readMessage(
                        dnd.generated.EncounterServiceOuterClass.EncounterRpc.parser(),
                        extensionRegistry);
                if (encountersBuilder_ == null) {
                  ensureEncountersIsMutable();
                  encounters_.add(m);
                } else {
                  encountersBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<dnd.generated.EncounterServiceOuterClass.EncounterRpc> encounters_ =
        java.util.Collections.emptyList();
      private void ensureEncountersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          encounters_ = new java.util.ArrayList<dnd.generated.EncounterServiceOuterClass.EncounterRpc>(encounters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dnd.generated.EncounterServiceOuterClass.EncounterRpc, dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder, dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder> encountersBuilder_;

      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public java.util.List<dnd.generated.EncounterServiceOuterClass.EncounterRpc> getEncountersList() {
        if (encountersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(encounters_);
        } else {
          return encountersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public int getEncountersCount() {
        if (encountersBuilder_ == null) {
          return encounters_.size();
        } else {
          return encountersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.EncounterRpc getEncounters(int index) {
        if (encountersBuilder_ == null) {
          return encounters_.get(index);
        } else {
          return encountersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder setEncounters(
          int index, dnd.generated.EncounterServiceOuterClass.EncounterRpc value) {
        if (encountersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncountersIsMutable();
          encounters_.set(index, value);
          onChanged();
        } else {
          encountersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder setEncounters(
          int index, dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder builderForValue) {
        if (encountersBuilder_ == null) {
          ensureEncountersIsMutable();
          encounters_.set(index, builderForValue.build());
          onChanged();
        } else {
          encountersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder addEncounters(dnd.generated.EncounterServiceOuterClass.EncounterRpc value) {
        if (encountersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncountersIsMutable();
          encounters_.add(value);
          onChanged();
        } else {
          encountersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder addEncounters(
          int index, dnd.generated.EncounterServiceOuterClass.EncounterRpc value) {
        if (encountersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncountersIsMutable();
          encounters_.add(index, value);
          onChanged();
        } else {
          encountersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder addEncounters(
          dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder builderForValue) {
        if (encountersBuilder_ == null) {
          ensureEncountersIsMutable();
          encounters_.add(builderForValue.build());
          onChanged();
        } else {
          encountersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder addEncounters(
          int index, dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder builderForValue) {
        if (encountersBuilder_ == null) {
          ensureEncountersIsMutable();
          encounters_.add(index, builderForValue.build());
          onChanged();
        } else {
          encountersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder addAllEncounters(
          java.lang.Iterable<? extends dnd.generated.EncounterServiceOuterClass.EncounterRpc> values) {
        if (encountersBuilder_ == null) {
          ensureEncountersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, encounters_);
          onChanged();
        } else {
          encountersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder clearEncounters() {
        if (encountersBuilder_ == null) {
          encounters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          encountersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public Builder removeEncounters(int index) {
        if (encountersBuilder_ == null) {
          ensureEncountersIsMutable();
          encounters_.remove(index);
          onChanged();
        } else {
          encountersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder getEncountersBuilder(
          int index) {
        return getEncountersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder getEncountersOrBuilder(
          int index) {
        if (encountersBuilder_ == null) {
          return encounters_.get(index);  } else {
          return encountersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public java.util.List<? extends dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder> 
           getEncountersOrBuilderList() {
        if (encountersBuilder_ != null) {
          return encountersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(encounters_);
        }
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder addEncountersBuilder() {
        return getEncountersFieldBuilder().addBuilder(
            dnd.generated.EncounterServiceOuterClass.EncounterRpc.getDefaultInstance());
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder addEncountersBuilder(
          int index) {
        return getEncountersFieldBuilder().addBuilder(
            index, dnd.generated.EncounterServiceOuterClass.EncounterRpc.getDefaultInstance());
      }
      /**
       * <code>repeated .EncounterRpc encounters = 1;</code>
       */
      public java.util.List<dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder> 
           getEncountersBuilderList() {
        return getEncountersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dnd.generated.EncounterServiceOuterClass.EncounterRpc, dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder, dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder> 
          getEncountersFieldBuilder() {
        if (encountersBuilder_ == null) {
          encountersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dnd.generated.EncounterServiceOuterClass.EncounterRpc, dnd.generated.EncounterServiceOuterClass.EncounterRpc.Builder, dnd.generated.EncounterServiceOuterClass.EncounterRpcOrBuilder>(
                  encounters_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          encounters_ = null;
        }
        return encountersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EncounterListRpc)
    }

    // @@protoc_insertion_point(class_scope:EncounterListRpc)
    private static final dnd.generated.EncounterServiceOuterClass.EncounterListRpc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dnd.generated.EncounterServiceOuterClass.EncounterListRpc();
    }

    public static dnd.generated.EncounterServiceOuterClass.EncounterListRpc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncounterListRpc>
        PARSER = new com.google.protobuf.AbstractParser<EncounterListRpc>() {
      @java.lang.Override
      public EncounterListRpc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EncounterListRpc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncounterListRpc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dnd.generated.EncounterServiceOuterClass.EncounterListRpc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MonsterRpc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MonsterRpc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GenerateEncounterRpc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GenerateEncounterRpc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MonsterAmountRpc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MonsterAmountRpc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EncounterRpc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EncounterRpc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EncounterListRpc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EncounterListRpc_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027encounter_service.proto\"&\n\nMonsterRpc\022" +
      "\n\n\002cr\030\001 \001(\002\022\014\n\004name\030\002 \001(\t\"\314\001\n\024GenerateEn" +
      "counterRpc\022\032\n\022amountOfEncounters\030\001 \001(\005\022\n" +
      "\n\002xp\030\002 \001(\005\022\023\n\013xpTolerance\030\003 \001(\005\022\033\n\023maxAm" +
      "ountOfMonsters\030\004 \001(\005\022\037\n\027differentKindOfM" +
      "onsters\030\005 \001(\010\022!\n\031onlyOneKindOfMonsterPer" +
      "Cr\030\006 \001(\010\022\026\n\016monsterGroupId\030\007 \001(\003\"@\n\020Mons" +
      "terAmountRpc\022\016\n\006amount\030\001 \001(\005\022\034\n\007monster\030" +
      "\002 \001(\0132\013.MonsterRpc\"3\n\014EncounterRpc\022#\n\010mo" +
      "nsters\030\001 \003(\0132\021.MonsterAmountRpc\"5\n\020Encou" +
      "nterListRpc\022!\n\nencounters\030\001 \003(\0132\r.Encoun" +
      "terRpc2R\n\020EncounterService\022>\n\022generateEn" +
      "counters\022\025.GenerateEncounterRpc\032\021.Encoun" +
      "terListRpcB\017\n\rdnd.generatedb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_MonsterRpc_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MonsterRpc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MonsterRpc_descriptor,
        new java.lang.String[] { "Cr", "Name", });
    internal_static_GenerateEncounterRpc_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_GenerateEncounterRpc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GenerateEncounterRpc_descriptor,
        new java.lang.String[] { "AmountOfEncounters", "Xp", "XpTolerance", "MaxAmountOfMonsters", "DifferentKindOfMonsters", "OnlyOneKindOfMonsterPerCr", "MonsterGroupId", });
    internal_static_MonsterAmountRpc_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_MonsterAmountRpc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MonsterAmountRpc_descriptor,
        new java.lang.String[] { "Amount", "Monster", });
    internal_static_EncounterRpc_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_EncounterRpc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EncounterRpc_descriptor,
        new java.lang.String[] { "Monsters", });
    internal_static_EncounterListRpc_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_EncounterListRpc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EncounterListRpc_descriptor,
        new java.lang.String[] { "Encounters", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
